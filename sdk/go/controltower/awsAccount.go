// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package controltower

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type AwsAccount struct {
	pulumi.CustomResourceState

	// ID of the AWS account.
	AccountId pulumi.StringOutput `pulumi:"accountId"`
	// Root email of the account.
	Email pulumi.StringOutput `pulumi:"email"`
	// Name of the account.
	Name pulumi.StringOutput `pulumi:"name"`
	// Name of the Organizational Unit under which the account resides.
	OrganizationalUnit pulumi.StringOutput `pulumi:"organizationalUnit"`
	// Name of the service catalog product that is provisioned. Defaults to a slugified version of the account name.
	ProvisionedProductName pulumi.StringOutput `pulumi:"provisionedProductName"`
	// Assigned SSO user settings.
	Sso AwsAccountSsoOutput `pulumi:"sso"`
	// Key-value map of resource tags for the account.
	Tags pulumi.StringMapOutput `pulumi:"tags"`
}

// NewAwsAccount registers a new resource with the given unique name, arguments, and options.
func NewAwsAccount(ctx *pulumi.Context,
	name string, args *AwsAccountArgs, opts ...pulumi.ResourceOption) (*AwsAccount, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Email == nil {
		return nil, errors.New("invalid value for required argument 'Email'")
	}
	if args.OrganizationalUnit == nil {
		return nil, errors.New("invalid value for required argument 'OrganizationalUnit'")
	}
	if args.Sso == nil {
		return nil, errors.New("invalid value for required argument 'Sso'")
	}
	var resource AwsAccount
	err := ctx.RegisterResource("controltower:index/awsAccount:AwsAccount", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAwsAccount gets an existing AwsAccount resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAwsAccount(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AwsAccountState, opts ...pulumi.ResourceOption) (*AwsAccount, error) {
	var resource AwsAccount
	err := ctx.ReadResource("controltower:index/awsAccount:AwsAccount", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AwsAccount resources.
type awsAccountState struct {
	// ID of the AWS account.
	AccountId *string `pulumi:"accountId"`
	// Root email of the account.
	Email *string `pulumi:"email"`
	// Name of the account.
	Name *string `pulumi:"name"`
	// Name of the Organizational Unit under which the account resides.
	OrganizationalUnit *string `pulumi:"organizationalUnit"`
	// Name of the service catalog product that is provisioned. Defaults to a slugified version of the account name.
	ProvisionedProductName *string `pulumi:"provisionedProductName"`
	// Assigned SSO user settings.
	Sso *AwsAccountSso `pulumi:"sso"`
	// Key-value map of resource tags for the account.
	Tags map[string]string `pulumi:"tags"`
}

type AwsAccountState struct {
	// ID of the AWS account.
	AccountId pulumi.StringPtrInput
	// Root email of the account.
	Email pulumi.StringPtrInput
	// Name of the account.
	Name pulumi.StringPtrInput
	// Name of the Organizational Unit under which the account resides.
	OrganizationalUnit pulumi.StringPtrInput
	// Name of the service catalog product that is provisioned. Defaults to a slugified version of the account name.
	ProvisionedProductName pulumi.StringPtrInput
	// Assigned SSO user settings.
	Sso AwsAccountSsoPtrInput
	// Key-value map of resource tags for the account.
	Tags pulumi.StringMapInput
}

func (AwsAccountState) ElementType() reflect.Type {
	return reflect.TypeOf((*awsAccountState)(nil)).Elem()
}

type awsAccountArgs struct {
	// Root email of the account.
	Email string `pulumi:"email"`
	// Name of the account.
	Name *string `pulumi:"name"`
	// Name of the Organizational Unit under which the account resides.
	OrganizationalUnit string `pulumi:"organizationalUnit"`
	// Name of the service catalog product that is provisioned. Defaults to a slugified version of the account name.
	ProvisionedProductName *string `pulumi:"provisionedProductName"`
	// Assigned SSO user settings.
	Sso AwsAccountSso `pulumi:"sso"`
	// Key-value map of resource tags for the account.
	Tags map[string]string `pulumi:"tags"`
}

// The set of arguments for constructing a AwsAccount resource.
type AwsAccountArgs struct {
	// Root email of the account.
	Email pulumi.StringInput
	// Name of the account.
	Name pulumi.StringPtrInput
	// Name of the Organizational Unit under which the account resides.
	OrganizationalUnit pulumi.StringInput
	// Name of the service catalog product that is provisioned. Defaults to a slugified version of the account name.
	ProvisionedProductName pulumi.StringPtrInput
	// Assigned SSO user settings.
	Sso AwsAccountSsoInput
	// Key-value map of resource tags for the account.
	Tags pulumi.StringMapInput
}

func (AwsAccountArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*awsAccountArgs)(nil)).Elem()
}

type AwsAccountInput interface {
	pulumi.Input

	ToAwsAccountOutput() AwsAccountOutput
	ToAwsAccountOutputWithContext(ctx context.Context) AwsAccountOutput
}

func (*AwsAccount) ElementType() reflect.Type {
	return reflect.TypeOf((*AwsAccount)(nil))
}

func (i *AwsAccount) ToAwsAccountOutput() AwsAccountOutput {
	return i.ToAwsAccountOutputWithContext(context.Background())
}

func (i *AwsAccount) ToAwsAccountOutputWithContext(ctx context.Context) AwsAccountOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AwsAccountOutput)
}

func (i *AwsAccount) ToAwsAccountPtrOutput() AwsAccountPtrOutput {
	return i.ToAwsAccountPtrOutputWithContext(context.Background())
}

func (i *AwsAccount) ToAwsAccountPtrOutputWithContext(ctx context.Context) AwsAccountPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AwsAccountPtrOutput)
}

type AwsAccountPtrInput interface {
	pulumi.Input

	ToAwsAccountPtrOutput() AwsAccountPtrOutput
	ToAwsAccountPtrOutputWithContext(ctx context.Context) AwsAccountPtrOutput
}

type awsAccountPtrType AwsAccountArgs

func (*awsAccountPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AwsAccount)(nil))
}

func (i *awsAccountPtrType) ToAwsAccountPtrOutput() AwsAccountPtrOutput {
	return i.ToAwsAccountPtrOutputWithContext(context.Background())
}

func (i *awsAccountPtrType) ToAwsAccountPtrOutputWithContext(ctx context.Context) AwsAccountPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AwsAccountPtrOutput)
}

// AwsAccountArrayInput is an input type that accepts AwsAccountArray and AwsAccountArrayOutput values.
// You can construct a concrete instance of `AwsAccountArrayInput` via:
//
//          AwsAccountArray{ AwsAccountArgs{...} }
type AwsAccountArrayInput interface {
	pulumi.Input

	ToAwsAccountArrayOutput() AwsAccountArrayOutput
	ToAwsAccountArrayOutputWithContext(context.Context) AwsAccountArrayOutput
}

type AwsAccountArray []AwsAccountInput

func (AwsAccountArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AwsAccount)(nil)).Elem()
}

func (i AwsAccountArray) ToAwsAccountArrayOutput() AwsAccountArrayOutput {
	return i.ToAwsAccountArrayOutputWithContext(context.Background())
}

func (i AwsAccountArray) ToAwsAccountArrayOutputWithContext(ctx context.Context) AwsAccountArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AwsAccountArrayOutput)
}

// AwsAccountMapInput is an input type that accepts AwsAccountMap and AwsAccountMapOutput values.
// You can construct a concrete instance of `AwsAccountMapInput` via:
//
//          AwsAccountMap{ "key": AwsAccountArgs{...} }
type AwsAccountMapInput interface {
	pulumi.Input

	ToAwsAccountMapOutput() AwsAccountMapOutput
	ToAwsAccountMapOutputWithContext(context.Context) AwsAccountMapOutput
}

type AwsAccountMap map[string]AwsAccountInput

func (AwsAccountMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AwsAccount)(nil)).Elem()
}

func (i AwsAccountMap) ToAwsAccountMapOutput() AwsAccountMapOutput {
	return i.ToAwsAccountMapOutputWithContext(context.Background())
}

func (i AwsAccountMap) ToAwsAccountMapOutputWithContext(ctx context.Context) AwsAccountMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AwsAccountMapOutput)
}

type AwsAccountOutput struct{ *pulumi.OutputState }

func (AwsAccountOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AwsAccount)(nil))
}

func (o AwsAccountOutput) ToAwsAccountOutput() AwsAccountOutput {
	return o
}

func (o AwsAccountOutput) ToAwsAccountOutputWithContext(ctx context.Context) AwsAccountOutput {
	return o
}

func (o AwsAccountOutput) ToAwsAccountPtrOutput() AwsAccountPtrOutput {
	return o.ToAwsAccountPtrOutputWithContext(context.Background())
}

func (o AwsAccountOutput) ToAwsAccountPtrOutputWithContext(ctx context.Context) AwsAccountPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AwsAccount) *AwsAccount {
		return &v
	}).(AwsAccountPtrOutput)
}

type AwsAccountPtrOutput struct{ *pulumi.OutputState }

func (AwsAccountPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AwsAccount)(nil))
}

func (o AwsAccountPtrOutput) ToAwsAccountPtrOutput() AwsAccountPtrOutput {
	return o
}

func (o AwsAccountPtrOutput) ToAwsAccountPtrOutputWithContext(ctx context.Context) AwsAccountPtrOutput {
	return o
}

func (o AwsAccountPtrOutput) Elem() AwsAccountOutput {
	return o.ApplyT(func(v *AwsAccount) AwsAccount {
		if v != nil {
			return *v
		}
		var ret AwsAccount
		return ret
	}).(AwsAccountOutput)
}

type AwsAccountArrayOutput struct{ *pulumi.OutputState }

func (AwsAccountArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AwsAccount)(nil))
}

func (o AwsAccountArrayOutput) ToAwsAccountArrayOutput() AwsAccountArrayOutput {
	return o
}

func (o AwsAccountArrayOutput) ToAwsAccountArrayOutputWithContext(ctx context.Context) AwsAccountArrayOutput {
	return o
}

func (o AwsAccountArrayOutput) Index(i pulumi.IntInput) AwsAccountOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AwsAccount {
		return vs[0].([]AwsAccount)[vs[1].(int)]
	}).(AwsAccountOutput)
}

type AwsAccountMapOutput struct{ *pulumi.OutputState }

func (AwsAccountMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]AwsAccount)(nil))
}

func (o AwsAccountMapOutput) ToAwsAccountMapOutput() AwsAccountMapOutput {
	return o
}

func (o AwsAccountMapOutput) ToAwsAccountMapOutputWithContext(ctx context.Context) AwsAccountMapOutput {
	return o
}

func (o AwsAccountMapOutput) MapIndex(k pulumi.StringInput) AwsAccountOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) AwsAccount {
		return vs[0].(map[string]AwsAccount)[vs[1].(string)]
	}).(AwsAccountOutput)
}

func init() {
	pulumi.RegisterOutputType(AwsAccountOutput{})
	pulumi.RegisterOutputType(AwsAccountPtrOutput{})
	pulumi.RegisterOutputType(AwsAccountArrayOutput{})
	pulumi.RegisterOutputType(AwsAccountMapOutput{})
}
